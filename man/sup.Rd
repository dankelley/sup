% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sup.R
\docType{package}
\name{sup}
\alias{sup}
\title{sup: A Package for Simple Error Propagation}
\description{
The sup package provides functions for handling simple
arithmetic operations for scalar quantities that are subject
to uncertainty. This is handled with binary operators:
\verb{\%+\%} for addition, \verb{\%-\%} for subtraction, \verb{\%*\%} for multiplication
and \verb{\%/\%} for division. These operators can work with vectors
of length 1 (which are interpreted as scalars without uncertainties),
with vectors of length 2 (in which case the second element is taken
as the uncertainty) or with objects created with \code{\link[=as.sup]{as.sup()}}, e.g.\preformatted{1 \%*\% 3                       # 3 +- 0
c(1, 0.1) \%*\% c(3, 0.3)       # 3 +- 0.4242641
c(1, 0.1) \%*\% as.sup(3, 0.3)  # 3 +- 0.4242641
}
}
\section{A note on left-to-right operator precedence}{


It is important to note that the sup operators work from
left to right, which is unlike the normal state of affairs
in R.  Thus, for example,\preformatted{c(1, 0) \%+\% c(2, 0) \%*\% c(3, 0)
}

evaluates to \code{9 +- 0}, because the addition is done before
the multiplication, whereas conventonal R precedence
would suggest \code{7 +- 0}.  Parentheses are the solution
to this problem, e.g. writing\preformatted{c(1, 0) \%+\% (c(2, 0) \%*\% c(3, 0))
}

in this case.
}

